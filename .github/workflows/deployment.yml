name: Deployment

on:
  push:
    tags:
      - v4r3p[0-9]+
  pull_request:

jobs:
  deploy-pypi:
    name: PyPI deployment
    runs-on: "ubuntu-latest"
    if: github.event_name != 'push' || github.repository == 'TaykYoku/diracdoctools'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install build readme_renderer diraccfg
      - name: Validate README for PyPI
        run: python -m readme_renderer README.rst -o /tmp/README.html
      - name: Make PEP-440 style release on GitHub
        id: PEP-440
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          NEW_STYLE=$(python -c "import diraccfg; major, minor, patch, pre = diraccfg.parseVersion('${TAG_NAME}'); print(f'{major}.{minor}.{patch}', f'a{pre}' if pre else '', sep='')")
          echo "Converted ${TAG_NAME} version to ${NEW_STYLE}"
          echo ::set-output name=tag_name::"v$NEW_STYLE"
      - uses: ncipollo/release-action@v1
        if: github.event_name == 'push'
        with:
          bodyFile: release.notes
          tag: ${{ steps.PEP-440.outputs.tag_name }}
      # Need to do this after creating the PEP-440 style tag
      - name: Build distributions for ${{ steps.PEP-440.outputs.tag_name }}
        run: |
          git fetch --all --tags
          python -m build
      - name: Publish package on PyPI
        if: github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.NO_PYPI_API_TOKEN }}
